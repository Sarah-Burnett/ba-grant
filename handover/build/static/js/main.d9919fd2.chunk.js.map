{"version":3,"sources":["images/sharepoint-logo.png","images/sona-logo.PNG","images/qualtrics-logo.jpg","images/E-Prime2-logo.jpg","images/biopac-logo.png","layout/Nav.js","Styles.js","pages/Home.js","components/SlideDots.js","components/Slideshow.js","pages/QualtricsIntro.js","pages/QualtricsExport.js","pages/SonaIntro.js","pages/SharepointIntro.js","components/Description.js","components/Slide.js","components/FullSlides.js","pages/PsychophysP1.js","pages/PsychophysP.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","styled","nav","Img","div","Title","h1","NavLinks","ul","Nav","src","alt","href","target","rel","HomePage","H2","h2","Links","img","Home","to","Sharepoint","SONA","Qualtrics","EPrime","BIOPAC","Dots","Dot","ActiveDot","SlideDots","json","currentIndex","className","map","item","index","Container","H1","h3","Text","Buttons","Button","button","PrimaryButton","Slideshow","startStep","useState","setCurrentIndex","currentStep","setCurrentStep","name","title","start","setStart","end","setEnd","console","log","description","type","onClick","newIndex","length","image","QualtricsIntro","setJson","useEffect","fetch","then","response","data","catch","err","QualtricsExport","SonaIntro","SharepointIntro","Description","desc","key","Slide","slide","FullSlides","PsychophysP1","PsychophysP","id","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d9919fd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sharepoint-logo.15b4c88e.png\";","module.exports = __webpack_public_path__ + \"static/media/sona-logo.751952a4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/qualtrics-logo.98fe617f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/E-Prime2-logo.2509b305.jpg\";","module.exports = __webpack_public_path__ + \"static/media/biopac-logo.15caf509.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { lightBlue, darkBlue, accent } from '../Styles';\r\n\r\nconst NavBar = styled.nav`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    min-height: 10vh;\r\n    background: ${darkBlue};\r\n    color: ${lightBlue};\r\n`\r\nconst Img = styled.div`\r\n    height: 10vh;\r\n    img {\r\n        height: 100%;\r\n        width: auto;\r\n    }\r\n`\r\n\r\nconst Title = styled.h1`\r\n    margin: auto;\r\n`\r\n\r\nconst NavLinks = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n    li {\r\n        list-style: none;\r\n        margin: 2vh 2vw;\r\n    }\r\n    a {\r\n        font-weight: bold;\r\n        text-decoration: none;\r\n        color: ${lightBlue};\r\n        &:hover {\r\n            color: ${accent};\r\n        }\r\n    }\r\n`\r\n\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <NavBar>\r\n            <Img><img src=\"https://exetercles.eu.qualtrics.com/ControlPanel/Graphic.php?IM=IM_0cEBafEeKfQXbM1\" alt=\"logo\"/></Img>\r\n            <Title>BA Regulatory Focus and Rumination</Title>\r\n            <NavLinks>\r\n                <li><a href=\"http://localhost:3000\">Home</a></li>\r\n                <li><a href=\"https://exetercles.eu.qualtrics.com/login\" target=\"_blank\" rel=\"noopener noreferrer\">Qualtrics</a></li>\r\n                <li><a href=\"https://exeter-psychology.sona-systems.com/\" target=\"_blank\" rel=\"noopener noreferrer\">SONA</a></li>\r\n                <li><a href=\"https://universityofexeteruk.sharepoint.com/sites/BA_Regulatory_Focus_and_Rumination\" rel=\"noopener noreferrer\" target=\"_blank\">Sharepoint</a></li>\r\n            </NavLinks>\r\n        </NavBar>\r\n    )\r\n};\r\n\r\nexport default Nav;\r\n","export const darkBlue = \"#011934\";\r\nexport const lightBlue = \"#e5f1f8\";\r\nexport const darkGrey = \"#808080\";\r\nexport const lightGrey = \"#cccccc\";\r\nexport const accent = \"#198dff\";\r\nexport const white = \"#FFF\";\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Sharepoint from '../images/sharepoint-logo.png';\r\nimport SONA from '../images/sona-logo.PNG';\r\nimport Qualtrics from '../images/qualtrics-logo.jpg';\r\nimport EPrime from '../images/E-Prime2-logo.jpg';\r\nimport BIOPAC from '../images/biopac-logo.png';\r\nimport styled from 'styled-components';\r\nimport { darkBlue, darkGrey, white, accent } from '../Styles';\r\n\r\nconst HomePage = styled.nav`\r\n    padding: 1vh 0;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-wrap: wrap;\r\n    min-height: 90vh;\r\n    color: ${darkBlue};\r\n`\r\n\r\nconst H2 = styled.h2`\r\n    height: 15vh;\r\n    line-height: 15vh;\r\n    border-bottom: 1px solid ${darkGrey};\r\n    margin-bottom: 1vh;\r\n`\r\n\r\nconst Links = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: auto 1fr 20vh;\r\n    text-align: center;\r\n    padding: 3vh 1vw;\r\n    margin: 3vh 0 ;\r\n    width: 250px;\r\n    background: ${white};\r\n    box-shadow: 0px 0px 10px 5px ${darkBlue};\r\n    li {\r\n        list-style: none;\r\n        margin: 2vh 1vw;\r\n        line-height: 2;\r\n    }\r\n    a {\r\n        text-decoration: none;\r\n        color: ${darkBlue};\r\n        &:hover {\r\n            color: ${accent};\r\n        }\r\n    }\r\n`\r\n\r\nconst Img = styled.img`\r\n    border-top: 1px solid ${darkGrey};\r\n    padding-top: 1vh;\r\n    height: 100%;\r\n    width: 100%;\r\n`\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <HomePage>\r\n            <Links>\r\n                <H2>Sharepoint</H2>\r\n                <ul>\r\n                    <li><Link to=\"/sharepoint-getting-started\">Navigation</Link></li>\r\n                </ul>\r\n                <Img src={Sharepoint} alt=\"Sharepoint\"/>\r\n            </Links>\r\n            <Links>\r\n                <H2>SONA</H2>\r\n                <ul>\r\n                    <li><Link to=\"/sona-getting-started\">Getting started</Link></li>\r\n                    <li>Batch credits</li>\r\n                </ul>\r\n                <Img src={SONA} alt=\"SONA\"/>\r\n            </Links>\r\n            <Links>\r\n                <H2>Qualtrics</H2>\r\n                <ul>\r\n                    <li><Link to=\"/qualtrics-getting-started\">Getting started</Link></li>\r\n                    <li><Link to=\"/qualtrics-export\">Export data</Link></li>\r\n                    <li><a href=\"https://www.qualtrics.com/support/survey-platform/my-projects/my-projects-overview/\" target=\"_blank\" rel=\"noopener noreferrer\">Support pages</a></li>\r\n                    <li><a href=\"https://exetercles.eu.qualtrics.com/jfe/form/SV_7aK3Ivy3A4i3A57\" target=\"_blank\" rel=\"noopener noreferrer\">Live Survey</a></li>\r\n                </ul>\r\n                <Img src={Qualtrics} alt=\"Qualtrics\"/>\r\n            </Links>\r\n            <Links>\r\n                <H2>E-prime</H2>\r\n                <ul>\r\n                    <li>Collection</li>\r\n                    <li>Preprocessing</li>\r\n                    <li>MSci Seminar</li>\r\n                </ul>\r\n                <Img src={EPrime} alt=\"E-Prime\"/>\r\n            </Links>\r\n            <Links>\r\n                <H2>Psychophys</H2>\r\n                <ul>\r\n                    <li>AcqKnowledge</li>\r\n                    <li>Collection</li>\r\n                    <li><Link to=\"/psychophys-preprocess\">Preprocessing</Link></li>\r\n                    <li>MSci Seminar</li>\r\n                </ul>\r\n                <Img src={BIOPAC} alt=\"BIOPAC\"/>\r\n            </Links>\r\n        </HomePage>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { darkGrey, darkBlue } from '../Styles';\r\n\r\nconst Dots = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 1vh 0 3vh;\r\n`\r\nconst Dot = styled.div`\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    background: ${darkGrey};\r\n    margin: 0 1vw;\r\n`\r\n\r\nconst ActiveDot = styled.div`\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    background: ${darkBlue};\r\n    margin: 0 1vw;\r\n`\r\n\r\nconst SlideDots = ({ json, currentIndex }) => {\r\n    return (\r\n        <Dots className=\"dots\">\r\n            { json.map( (item, index) => index === currentIndex ? <ActiveDot/> : <Dot/>  ) }\r\n        </Dots>\r\n    )\r\n};\r\n\r\nexport default SlideDots;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SlideDots from './SlideDots';\r\nimport styled from 'styled-components';\r\nimport { lightGrey, darkGrey, darkBlue, accent, white } from '../Styles';\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    min-height: 90vh;\r\n    margin: auto;\r\n    display: flex;\r\n    background: ${lightGrey};\r\n`\r\n\r\nconst H1 = styled.h1`\r\n    text-align: center;\r\n    border-bottom: 1px solid ${darkGrey};\r\n    margin-bottom: 2vh;\r\n    padding: 2vh 0;\r\n`\r\n\r\nconst Title = styled.h3`\r\n    line-height: 2;\r\n    padding-bottom: 2vw;\r\n    text-align: center;\r\n`\r\n\r\nconst Img = styled.div`\r\n    height: 90vh;\r\n    min-width: 50vw;\r\n    overflow-y: scroll;\r\n    img {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst Text = styled.div`\r\n    background: ${white};\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 2vh 2vw;\r\n    display: grid;\r\n    grid-template-rows: auto auto 1fr auto;\r\n    grid-template-columns: 1;\r\n    p {\r\n        line-height: 2;\r\n        margin-bottom: 2vh;\r\n    }\r\n`\r\n\r\nconst Buttons = styled.div`\r\n    padding: 2vh 0 0;\r\n    width: 100%;\r\n`\r\n\r\nconst Button = styled.button`\r\n    padding: 2vh 2vw;\r\n    margin: 1vh 0;\r\n    width: 100%;\r\n    border: none;\r\n    color: #001429;\r\n    cursor: pointer;\r\n    background: #95c5e2;\r\n    box-shadow: 0px 0px 2px 2px ${darkBlue};\r\n    &:hover {\r\n        background: #001429;\r\n        color: ${accent};\r\n    }\r\n    &:disabled {\r\n        opacity: 0;\r\n        pointer-events: none;\r\n    }\r\n`\r\n\r\nconst PrimaryButton = styled(Button)`\r\n    background: ${accent};\r\n    \r\n`\r\n\r\nconst Slideshow = ({json, startStep}) => {\r\n    const [ currentIndex, setCurrentIndex ] = useState(-1);\r\n    const [ currentStep, setCurrentStep ] = useState(startStep);\r\n    const [ title, setTitle ] = useState(currentStep.name);\r\n    const [ start, setStart ] = useState(true);\r\n    const [ end, setEnd ] = useState(false);\r\n\r\n    console.log(currentStep);\r\n\r\n    const nextStep = () => {\r\n        setStart(false);\r\n        setEnd(false);\r\n        const newIndex = currentIndex + 1\r\n        if (newIndex < json.length) {\r\n            setCurrentIndex(newIndex);\r\n            setCurrentStep( () => json[newIndex])\r\n        }\r\n        if (newIndex === json.length-1) setEnd(true)\r\n    };\r\n    const prevStep = () => {\r\n        setStart(false);\r\n        setEnd(false);\r\n        const newIndex = currentIndex - 1\r\n        if (newIndex >= 0) {\r\n            setCurrentIndex(newIndex);\r\n            setCurrentStep( () => json[newIndex])\r\n        }\r\n        if (newIndex === 0) setStart(true)\r\n    };\r\n    return (\r\n        <Container>\r\n                <Text>\r\n                    <H1>{title}</H1>\r\n                    <Title>\r\n                    { currentStep.name && currentStep.name !== title ? currentStep.name : \"Getting Started\" }\r\n                    </Title>\r\n                    <div>\r\n                    { currentStep.description && currentStep.description.map(item => <p>{item}</p>) }\r\n                    </div>\r\n                <Buttons>\r\n                    <SlideDots json={json} currentIndex={currentIndex}/>\r\n                    { !end && <PrimaryButton className=\"next\" type=\"button\" onClick={nextStep}>Next</PrimaryButton> }\r\n                    { end && <Link to=\"/\"><PrimaryButton className=\"next\" type=\"button\">Back to menu</PrimaryButton></Link> }\r\n                    { !start && <Button className=\"previous\" type=\"button\" onClick={prevStep}>Previous</Button> }\r\n                    <Button>View Full Page</Button>\r\n                </Buttons> \r\n                </Text>\r\n                <Img>\r\n                { currentStep.image && <img src={currentStep.image } alt=\"screenshot\"/>}\r\n                </Img>      \r\n           </Container>\r\n    )\r\n};\r\n\r\nexport default Slideshow;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Slideshow from '../components/Slideshow'\r\n\r\nconst QualtricsIntro = () => {\r\n    const [ json, setJson ] = useState([]);\r\n\r\n    const startStep = {\r\n        \"name\": \"Getting starting with Qualtrics\",\r\n        \"image\": \"./images/qualtrics/qualtrics-login.png\",\r\n        \"description\": [\r\n           \"The following information details how to login and navigate around Qualtrics\",\r\n           \"This outlines the basic use of Qualtrics for the screening survey for part 1 of the study.\",\r\n           \"After this, for more information on extracting the data see separate tutorial here.\",\r\n           \"For more information see the Qualtrics support pages\",\r\n           \"Click 'Next' to get started\"\r\n        ]\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetch('./json/qualtricsintro.json')\r\n        .then(response => response.json())\r\n        .then(data => setJson(data))\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <Slideshow json={json} startStep={startStep}/>\r\n    )\r\n}\r\n\r\nexport default QualtricsIntro;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Slideshow from '../components/Slideshow'\r\n\r\nconst QualtricsExport = () => {\r\n    const [ json, setJson ] = useState([]);\r\n\r\n    const startStep = {\r\n        \"name\": \"Exporting Data from Qualtrics\",\r\n        \"image\": \"./images/qualtrics/qualtrics-screener.png\",\r\n        \"description\": [\r\n           \"The following information details how to export data from Qualtrics\",\r\n           \"It also covers cleaning up the excel file ready to add to sharepoint\",\r\n           \"If you are new to Qualtrics, please view the getting started slides first\",\r\n           \"For more information see the Qualtrics support pages\",\r\n           \"Click 'Next' to get started\"\r\n        ]\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetch('./json/qualtricsexport.json')\r\n        .then(response => response.json())\r\n        .then(data => setJson(data))\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <Slideshow json={json} startStep={startStep}/>\r\n    )\r\n}\r\n\r\nexport default QualtricsExport;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Slideshow from '../components/Slideshow'\r\n\r\nconst SonaIntro = () => {\r\n    const [ json, setJson ] = useState([]);\r\n\r\n    const startStep = {\r\n        \"name\": \"Getting starting with Sona\",\r\n        \"image\": \"./images/sona/sona-login.png\",\r\n        \"description\": [\r\n           \"The following information details how to login and navigate around SONA\",\r\n           \"After this, see separate tutorial for bulk granting credits for the screener survey.\",\r\n           \"Click 'Next' to get started\"\r\n        ]\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetch('./json/sonaintro.json')\r\n        .then(response => response.json())\r\n        .then(data => setJson(data))\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <Slideshow json={json} startStep={startStep}/>\r\n    )\r\n}\r\n\r\nexport default SonaIntro;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Slideshow from '../components/Slideshow'\r\n\r\nconst SharepointIntro = () => {\r\n    const [ json, setJson ] = useState([]);\r\n\r\n    const startStep = {\r\n        \"name\": \"Navigation around sharepoint\",\r\n        \"image\": \"./images/sharepoint/sharepoint-home.png\",\r\n        \"description\": [\r\n           \"The following information details how to navigate around sharepoint\",\r\n           \"After this, see separate slides on introductions to the e-prime and psychophys data\",\r\n           \"Click 'Next' to get started\"\r\n        ]\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetch('./json/sharepointintro.json')\r\n        .then(response => response.json())\r\n        .then(data => setJson(data))\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <Slideshow json={json} startStep={startStep}/>\r\n    )\r\n}\r\n\r\nexport default SharepointIntro\r\n","import React from 'react'\r\n\r\nconst Description = ({desc}) => {\r\n    return (\r\n        <ul>\r\n            {desc.map( item => <li key={item}>{item}</li> )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Description","import React from 'react'\r\nimport { darkGrey, lightGrey, white } from '../Styles';\r\nimport styled from 'styled-components';\r\nimport Description from './Description';\r\n\r\nconst Text = styled.div`\r\n    margin: 2vh 0;\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 2vh 2vw;\r\n    background: ${white};\r\n    li {\r\n        line-height: 2;\r\n        margin-bottom: 2vh;\r\n        list-style: none;\r\n    }\r\n`\r\n\r\nconst Title = styled.h3`\r\n    line-height: 2;\r\n    padding-bottom: 2vw;\r\n    text-align: center;\r\n`\r\n\r\nconst Img = styled.div`\r\n    height: 90vh;\r\n    min-width: 50vw;\r\n    overflow-y: scroll;\r\n    img {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst Slide = ({ slide }) => {\r\n    return (\r\n        <Text>\r\n            <Title>{slide.name}</Title>\r\n            { slide.image && <img src={slide.image } alt=\"screenshot\"/>}\r\n            <Description desc={slide.description}/>\r\n        </Text>\r\n    )\r\n}\r\n\r\nexport default Slide;\r\n","import React from 'react';\r\nimport { lightGrey } from '../Styles';\r\nimport styled from 'styled-components';\r\nimport Slide from './Slide';\r\n\r\nconst Container = styled.div`\r\n    width: 80vw;\r\n    margin: auto;\r\n`\r\n\r\n\r\nconst FullSlides = ({json}) => {\r\n    json.map( slide => console.log(slide))\r\n    return (\r\n        <Container>\r\n                { json.map( slide => <Slide slide={slide} />)  }\r\n           </Container>\r\n    )\r\n};\r\n\r\nexport default FullSlides;","import React, {useState, useEffect} from 'react';\r\nimport FullSlides from '../components/FullSlides';\r\n\r\n\r\nconst PsychophysP1 = () => {\r\n    const [ json, setJson ] = useState([]);\r\n\r\n    const startStep = {\r\n        \"name\": \"Psychophys preprocessing part 1\",\r\n        \"image\": \"./images/psychophys/preprocessing-1-intro.png\",\r\n        \"description\": [\r\n            \"This slideshow goes through the steps for part 1 of the preprocessing\",\r\n            \"The purpose of part 1 is to generate the beats (QRS peaks) per minute across the experiment\",\r\n            \"First we will apply a filter to the heart rate (ECG) data and then we can identify all the QRS peaks to calculate BPM\",\r\n            \"For further information, please speak to Anke and/or view the pdfs in the 'BiopacDA' folder\",\r\n            \"Click 'Next' to get started\"\r\n        ]\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetch('./json/psychophysp1.json')\r\n        .then(response => response.json())\r\n        .then(data => setJson(data))\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <FullSlides json={json}/>\r\n    )\r\n}\r\n\r\nexport default PsychophysP1;\r\n","import React from 'react';\r\nimport PsychophysP1 from './PsychophysP1';\r\n\r\nconst PsychophysP = () => {\r\n    return (\r\n        <div>\r\n            <h1>Psychophys Preprocessing</h1>\r\n            <ul>\r\n                <li><a href=\"#part1\">Part 1</a></li>\r\n                <li><a href=\"#part2\">Part 2</a></li>\r\n                <li><a href=\"#part3\">Part 3</a></li>\r\n            </ul>\r\n            <section id=\"part1\">\r\n                <h2>Part 1 - filtering HRV and calculating BPM</h2>\r\n                <PsychophysP1/>\r\n            </section>\r\n            <section id=\"part2\">\r\n                <h2>Part 2- export means and HRV for each task</h2>\r\n            </section>\r\n            <section id=\"part3\">\r\n                <h2>Part 3 - data analysis</h2>\r\n            </section>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PsychophysP;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './app.css';\nimport Nav from './layout/Nav'\nimport Home from './pages/Home'\nimport QualtricsIntro from './pages/QualtricsIntro';\nimport QualtricsExport from './pages/QualtricsExport';\nimport SonaIntro from './pages/SonaIntro';\nimport SharepointIntro from './pages/SharepointIntro'\nimport PsychophysP from './pages/PsychophysP'\nimport PsychophysP1 from './pages/PsychophysP1'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Nav/>\n      <Switch>\n          <Route path=\"/qualtrics-getting-started\">\n            <QualtricsIntro/>\n          </Route>\n          <Route path=\"/qualtrics-export\">\n            <QualtricsExport/>\n          </Route>\n          <Route path=\"/sona-getting-started\">\n            <SonaIntro/>\n          </Route>\n          <Route path=\"/sharepoint-getting-started\">\n            <SharepointIntro/>\n          </Route>\n          <Route path=\"/psychophys-preprocess\">\n            <PsychophysP/>\n          </Route>\n          <Route path=\"/\">\n            <Home/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}